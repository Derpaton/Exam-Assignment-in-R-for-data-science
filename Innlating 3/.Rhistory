grouped_by_sex <- body %>%
group_by(sex)
ggplot(data = grouped_by_sex)+
geom_boxplot(mapping = aes(y = hgt))
ggplot(data = body %>% group_by(sex))+
geom_boxplot(mapping = aes(y =hgt))
ggplot(body)+
stat_qq(mapping = aes(sample = age, color = sex))
ggplot(body)+
stat_qq(mapping = aes(sample = hgt, color = sex))+
stat_qq_line(mapping = aes(sample = hgt, color = sex))
males <- body %>%
filter(sex == "m")
ggplot(males)+
geom_histogram(mapping = aes(x = hgt, y = ..density..), binwidth = 5)
ggplot(males)+
geom_histogram(mapping = aes(x = hgt, y = ..density..), binwidth = 5)+
stat_function(fun = dnorm, args = list(mean = mean(males$hgt), sd = sd(males$hgt)))
mean <- mean(males$hgt)
sd <- sd(males$hgt)
n <- nrow(males)
#Upper confiedence limit
UCL <- mean + 1.96*(sd/sqrt(n))
#Lower confidence limit
LCL <- mean - 1.96*(sd/sqrt(n))
UCL
LCL
females <- body %>%
filter(sex == "f")
mean <- mean(females$hgt)
sd <- sd(females$hgt)
n <- nrow(females)
#Upper confiedence limit
UCL <- mean + 1.96*(sd/sqrt(n))
#Lower confidence limit
LCL <- mean - 1.96*(sd/sqrt(n))
UCL
LCL
mean <- mean(body$hgt)
sd <- sd(body$hgt)
n <- nrow(body)
#Upper confiedence limit
UCL <- mean + 1.96*(sd/sqrt(n))
#Lower confidence limit
LCL <- mean - 1.96*(sd/sqrt(n))
UCL
LCL
ggplot(data = body)+
geom_histogram(mapping = aes(x = hgt, y = ..density..), binwidth = 5)+
stat_function(fun = dnorm, args = list(mean = mean(body$hgt), sd = sd(body$hgt)))
ggplot(data = body)+
stat_qq(mapping = aes(sample = hgt))
h <- sample(body$hgt, size = 50, replace = FALSE)
h
mean <- mean(h)
s <- sd(h)
se <- s / sqrt(length(h))
mean
s
se
ci95_high <- mean + 1.96*se
#Lower confidence limit
ci95_low <- mean - 1.96*se
ci95_low
ci95_high
pop_mean <- 171.14
test <- function(ilow, ihigh){
if(pop_mean >= ilow && pop_mean <= ihigh)
return(TRUE)
else
return(FALSE)
}
test(ci95_low,ci95_high)
n <- 50
r <- 100
mu_inside <-
replicate(r, {
# h
h <- sample(body$hgt, size = 50, replace = FALSE)
# mean
mean <- mean(h)
# s
s <-sd (h)
# se
se <- s / sqrt(n)
# ci95_high
ci95_high <- mean+1.96*se
# ci95_low
ci95_low <- mean-1.96*se
# (condition)
test(ci95_low,ci95_high)
})
mu_inside
false <- length(mu_inside[mu_inside==FALSE])
true <- length(mu_inside[mu_inside==TRUE])
#false percent
(false / true)*100
body %>% summarise_if(is.numeric, funs(mean, sd))
body %>% summarise_at(vars(age, hgt), funs(mean, sd))
body %>% group_by(sex) %>% summarise_at(vars(age, hgt), funs(mean, sd)) %>% select(sex, age_mean, age_sd, hgt_sd)
t.test(body$hgt)
t.test(body$age)
males <- body %>%
filter(sex == "m")
females <- body %>%
filter(sex == "f")
t.test(males$hgt, females$hgt)
# Put your answers to code-based questions into the given empty code-blocks.
# Run (test) your individual code chunks (Ctrl + Shift + Enter).
# Run All code blocks (Ctrl + Alt + R) before you "Preview" (Ctrl + Shift + K) the notebook in a browser.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(broom)
library(lubridate)
library(gapminder)
gapminder
str(gapminder)
n_distinct(gapminder$country)
gapminder %>%
group_by(continent) %>%
distinct(country) %>%
arrange(continent)
gapminder %>%
group_by(continent) %>%
summarise(years = n_distinct(year), countries = n_distinct(country), n = n())
ggplot(gapminder)+
geom_histogram(mapping = aes(x = lifeExp), binwidth = 5)+
facet_wrap(~continent)
gapminder %>%
group_by(continent) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
ggplot(data = gapminder)+
geom_boxplot(mapping = aes(x = continent, y = lifeExp))
ggplot(gapminder) +
geom_boxplot(mapping = aes(fct_reorder(continent,lifeExp,median), y = lifeExp))+
xlab("continent")
americas <- gapminder %>%
filter(continent == "Americas")
ggplot(americas) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
europe <- gapminder %>%
filter(continent == "Europe")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country") +
coord_flip()
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list) %>%
group_by(country) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
nordic
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic, mapping = aes(sample = lifeExp)) +
stat_qq() +
stat_qq_line()+
facet_wrap(~country)
denmark <- gapminder %>%
filter(country %in% "Denmark")
ireland <- gapminder %>%
filter(country %in% "Ireland")
t.test(denmark$lifeExp,ireland$lifeExp)
power.t.test(n = 12,delta = 3.15, sd = 3, sig.level = 0.05)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.7)
countryfilter = c("Iceland", "Sweden" , "Austria", "Norway", "Denmark", "France")
gapminder_6 <- gapminder %>%
filter(country %in% countryfilter)
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
mod <- lm(lifeExp ~ gdpPercap, data = gapminder_6)
summary(mod)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.9)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.9)
knitr::opts_chunk$set(echo = TRUE)
broom::glance(mod)
mod_au <- broom::augment(mod, gapminder_6)
mod_au <- broom::augment(mod, gapminder_6)
mod_au
ggplot()
ggplot(mod_au)
ggplot(mod_au, x=gdpPercap, y = .resid)
# Put your answers to code-based questions into the given empty code-blocks.
# Run (test) your individual code chunks (Ctrl + Shift + Enter).
# Run All code blocks (Ctrl + Alt + R) before you "Preview" (Ctrl + Shift + K) the notebook in a browser.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(broom)
library(lubridate)
library(gapminder)
gapminder
str(gapminder)
n_distinct(gapminder$country)
gapminder %>%
group_by(continent) %>%
distinct(country) %>%
arrange(continent)
gapminder %>%
group_by(continent) %>%
summarise(years = n_distinct(year), countries = n_distinct(country), n = n())
ggplot(gapminder)+
geom_histogram(mapping = aes(x = lifeExp), binwidth = 5)+
facet_wrap(~continent)
gapminder %>%
group_by(continent) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
ggplot(data = gapminder)+
geom_boxplot(mapping = aes(x = continent, y = lifeExp))
ggplot(gapminder) +
geom_boxplot(mapping = aes(fct_reorder(continent,lifeExp,median), y = lifeExp))+
xlab("continent")
americas <- gapminder %>%
filter(continent == "Americas")
ggplot(americas) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
europe <- gapminder %>%
filter(continent == "Europe")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country") +
coord_flip()
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list) %>%
group_by(country) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
nordic
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic, mapping = aes(sample = lifeExp)) +
stat_qq() +
stat_qq_line()+
facet_wrap(~country)
denmark <- gapminder %>%
filter(country %in% "Denmark")
ireland <- gapminder %>%
filter(country %in% "Ireland")
t.test(denmark$lifeExp,ireland$lifeExp)
power.t.test(n = 12,delta = 3.15, sd = 3, sig.level = 0.05)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.9)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.9)
countryfilter = c("Iceland", "Sweden" , "Austria", "Norway", "Denmark", "France")
gapminder_6 <- gapminder %>%
filter(country %in% countryfilter)
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
mod <- lm(lifeExp ~ gdpPercap, data = gapminder_6)
summary(mod)
broom::glance(mod)
mod_au <- broom::augment(mod, gapminder_6)
mod_au
ggplot(mod_au, x=gdpPercap, y = .residT)
ggplot(mod_au, x=gdpPercap, y = .residT)
ggplot(mod_au, x=gdpPercap, y = .resid)
ggplot(mod_au,mapping = aes( x=gdpPercap, y = .resid))
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))+
geom_point()
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))+
geom_point()+
stat_smooth(method = lm)
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))+
geom_point()+
plot()
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))+
geom_point()+
plot(mod_au)
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))+
geom_point()+
plot.default()
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))+
geom_point()+
plot.xy()
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))+
geom_point()
ggplot(mod_au) +
geom_boxplot(mapping = aes(x = mod_au, y = .resid))
ggplot(mod) +
geom_boxplot(mapping = aes(x = mod_au, y = .resid))
ggplot() +
geom_boxplot(mapping = aes(x = mod_au, y = .resid))
ggplot(data = mod) +
geom_boxplot(mapping = aes(x = mod_au, y = .resid))
ggplot(data = mod) +
geom_boxplot(mapping = aes(x = mod_au))
ggplot(data = mod) +
geom_boxplot(mapping = aes( y = .resid))
ggplot(mod_au, mapping = aes(sample = .resid)) +
stat_qq() +
stat_qq_line()
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
ggplot(data = mod) +
geom_boxplot(mapping = aes(y = .resid, x = "mod_au"))
quality_6 <- gapminder_6 %>%
group_by(do,broom::glance(lm(lifeExp ~ gdpPercap, data = .)))
quality_6 <- gapminder_6 %>%
group_by(do,broom::glance(lm(lifeExp ~ gdpPercap, data = .)))
quality_6 <- gapminder_6 %>%
group_by(do,broom::glance(lm(lifeExp ~ gdpPercap)))
quality_6 <- gapminder_6
quality_6 <- gapminder_6 %>%
group_by(broom::glance(lm(lifeExp ~ gdpPercap, data=.)))
results <- read.csv(results.csv)
results <- read.csv(file = results.csv)
results <- read.csv(file = ~results.csv)
results <- read.csv(file = results.csv)
results <- read.csv(file = "results.csv"")
results <- read.csv(file = "results.csv")
results <- read.csv(file = "results.csv")
results
results <- read.csv(file = "results.csv")+
col_types = cols(date = col_date(format = "%Y-%m-%d"))
results <- read.csv(file = "results.csv") %>%
col_types = cols(date = col_date(format = "%Y-%m-%d"))
results <- read.csv(file = "results.csv")
col_types = cols(date = col_date(format = "%Y-%m-%d"))
results
results <- read.csv(file = "results.csv")
results <- col_types = cols(date = col_date(format = "%Y-%m-%d"))
results <- read.csv(file = "results.csv")
results <- col_types = cols(date = col_date(format = "%Y-%m-%d"))
results <- read.csv(file = "results.csv")
col_types = cols(date = col_date(format = "%Y-%m-%d"))
results
results <- read_csv(file = "results.csv", col_types = cols(date = col_date(format = "%Y-%m-%d")))
results
UEFI <- results %>%
filter()
UEFI <- results %>%
filter(tournament, "UEFA Euro qualification")
UEFI <- results %>%
filter(tournament "UEFA Euro qualification")
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification")
UEFI
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" & ""FIFA World Cup qualification"")
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" && ""FIFA World Cup qualification"")
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" || "FIFA World Cup qualification")
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification", tournament == "FIFA World Cup qualification")
UEFI
UEFI <- results %>%
filter(tournament == "FIFA World Cup qualification")
UEFI
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" & tournament == "FIFA World Cup qualification")
UEFI
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification")
UEFI
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification" & date <= "1989-12-31")
UEFI
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification" & date >= "1989-12-31")
UEFI
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification" & date >= 1989-12-31)
UEFI
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification" & date <= 1989-12-31)
UEFI
knitr::opts_chunk$set(echo = TRUE)
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification") %>%
filter.date()
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification") %>%
filter.date(date.start("1989-12-31"))
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification")
# Put your answers to code-based questions into the given empty code-blocks.
# Run (test) your individual code chunks (Ctrl + Shift + Enter).
# Run All code blocks (Ctrl + Alt + R) before you "Preview" (Ctrl + Shift + K) the notebook in a browser.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(broom)
library(lubridate)
library(gapminder)
gapminder
str(gapminder)
n_distinct(gapminder$country)
gapminder %>%
group_by(continent) %>%
distinct(country) %>%
arrange(continent)
gapminder %>%
group_by(continent) %>%
summarise(years = n_distinct(year), countries = n_distinct(country), n = n())
ggplot(gapminder)+
geom_histogram(mapping = aes(x = lifeExp), binwidth = 5)+
facet_wrap(~continent)
gapminder %>%
group_by(continent) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
ggplot(data = gapminder)+
geom_boxplot(mapping = aes(x = continent, y = lifeExp))
ggplot(gapminder) +
geom_boxplot(mapping = aes(fct_reorder(continent,lifeExp,median), y = lifeExp))+
xlab("continent")
americas <- gapminder %>%
filter(continent == "Americas")
ggplot(americas) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
europe <- gapminder %>%
filter(continent == "Europe")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country") +
coord_flip()
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list) %>%
group_by(country) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
nordic
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic, mapping = aes(sample = lifeExp)) +
stat_qq() +
stat_qq_line()+
facet_wrap(~country)
denmark <- gapminder %>%
filter(country %in% "Denmark")
ireland <- gapminder %>%
filter(country %in% "Ireland")
t.test(denmark$lifeExp,ireland$lifeExp)
power.t.test(n = 12,delta = 3.15, sd = 3, sig.level = 0.05)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.9)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.9)
countryfilter = c("Iceland", "Sweden" , "Austria", "Norway", "Denmark", "France")
gapminder_6 <- gapminder %>%
filter(country %in% countryfilter)
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
mod <- lm(lifeExp ~ gdpPercap, data = gapminder_6)
summary(mod)
broom::glance(mod)
mod_au <- broom::augment(mod, gapminder_6)
mod_au
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))+
geom_point()
ggplot(data = mod) +
geom_boxplot(mapping = aes(y = .resid, x = "mod_au"))
ggplot(mod_au, mapping = aes(sample = .resid)) +
stat_qq() +
stat_qq_line()
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
quality_6 <- gapminder_6 %>%
group_by(broom::glance(lm(lifeExp ~ gdpPercap, data=.)))
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification") %>%
filter.date(date.start("1989-12-31"))
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification")
UEFI
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification" & date <= as.Date("1989-12-31") )
UEFI
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification" & date >= as.Date("1989-12-31") )
UEFI
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification") %>%
filter(date <= as.Date("1989-12-31"))
UEFI
