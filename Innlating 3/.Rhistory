by_continent
X <- split(by_continent, by_continent$continent)
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE)
by_continent
X <- split(by_continent, by_continent$continent)
X
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE)
by_continent
X <- split(by_continent, by_continent$continent)
X %>%
distinct(countries = distinct(country, continent))
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE)
by_continent
X <- split(by_continent, by_continent$continent)
X %>%
distinct(countries = n_distinct(country, continent))
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE)
by_continent
X <- split(by_continent, by_continent$continent)
X %>%
summarise(X)
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE)
by_continent
X <- split(by_continent, by_continent$continent)
X %>%
summarise()
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE)
by_continent
X <- split(by_continent, by_continent$continent)
X %>%
distinct(continent)
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE)
by_continent
X <- split(by_continent, by_continent$continent)
X
nrow(X)
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
group_by(continent)
X <- split(by_continent, by_continent$continent)
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
countries = distinct(country, continent)
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent)
X <- split(by_continent, by_continent$continent)
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
countries <- distinct(country, continent)
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
for(X)
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
for X
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X %>%
NROW(X)
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X %>%
nrow(X)
X %>%
nrow
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X %>%
nrow
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X %>%
n()
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X %>%
for(i in X){print(i)}
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X
for(i in X){print(i)}
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X
for(i in X){countries <- n_distinct(country, continent), print(i)}
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X
for(i in X){countries = n_distinct(country, continent), print(i)}
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X
for(i in X){countries = n_distinct(country, continent) print(i)}
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X
for(i in X){countries = n_distinct(country, continent)}
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X
for(i in X){countries = n_distinct(X$country, continent)}
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X
for(i in X){countries = n_distinct(by_continent$country, by_continent$continent)}
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X
for(i in X){countries = n_distinct(by_continent$country, by_continent$continent) print(countries)}
by_continent <- gapminder %>%
distinct(country, year, n(), .keep_all = TRUE) %>%
distinct(country, continent, .keep_all = TRUE)
X <- split(by_continent, by_continent$continent)
X
for(i in X){countries = n_distinct(by_continent$country, by_continent$continent) print(by_continent$countries)}
knitr::opts_chunk$set(echo = TRUE)
filter(country == "Denmark" || "Finland"|| "Iceland")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
europe <- gapminder %>%
filter(continent$country == "Denmark")
europe <- gapminder %>%
filter(country == "Denmark")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
# Put your answers to code-based questions into the given empty code-blocks.
# Run (test) your individual code chunks (Ctrl + Shift + Enter).
# Run All code blocks (Ctrl + Alt + R) before you "Preview" (Ctrl + Shift + K) the notebook in a browser.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(broom)
library(lubridate)
library(gapminder)
gapminder
str(gapminder)
n_distinct(gapminder$country)
gapminder %>%
group_by(continent) %>%
distinct(country) %>%
arrange(continent)
gapminder %>%
group_by(continent) %>%
summarise(years = n_distinct(year), countries = n_distinct(country), n = n())
ggplot(gapminder)+
geom_histogram(mapping = aes(x = lifeExp), binwidth = 5)+
facet_wrap(~continent)
gapminder %>%
group_by(continent) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
ggplot(data = gapminder)+
geom_boxplot(mapping = aes(x = continent, y = lifeExp))
ggplot(gapminder) +
geom_boxplot(mapping = aes(fct_reorder(continent,lifeExp,median), y = lifeExp))+
xlab("continent")
americas <- gapminder %>%
filter(continent == "Americas")
ggplot(americas) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
europe <- gapminder %>%
filter(continent == "Europe")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
europe <- gapminder %>%
filter(continent == "Europe")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
# mod <- lm(lifeExp ~ gdpPercap, data = gapminder_6)
# summary(mod)
europe <- gapminder %>%
filter(continent$country == "Denmark")
nordic <- gapminder %>%
ggplot(nordic) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
```{r}
nordic("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic = ("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic = ("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic = ["Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland"]
nordic["Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland"]
nordic = ["Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland"]
nordic = "Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland"
nordic = "Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland"
nordic
nordic = ("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
ggplot(gapminder)+
filter(continent$country == nordic)
ggplot(nordic) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
gapminder %>%
filter(country == nordic)
ggplot(nordic) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
gapminder %>%
filter(country == nordic)
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
gapminder %>%
filter(country == nordic)
gapminder %>%
filter(nordic)
country ==
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
gapminder %>%
filter(country == nordic)
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
europe <- gapminder %>%
filter(country == nordic)
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
europe <- gapminder %>%
filter(continent == "Europe")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
coord_flip()
europe <- gapminder %>%
filter(continent == "Europe")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
coord_flip()
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
europe <- gapminder %>%
filter(country %in% nordic)
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
europe <- gapminder %>%
filter(country %in% nordic)
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
gapminder %>%
filter(country %in% nordic)
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
europe <- gapminder %>%
filter(country %in% nordic)
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
gapminder %>%
filter(country %in% nordic)
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
# Put your answers to code-based questions into the given empty code-blocks.
# Run (test) your individual code chunks (Ctrl + Shift + Enter).
# Run All code blocks (Ctrl + Alt + R) before you "Preview" (Ctrl + Shift + K) the notebook in a browser.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(broom)
library(lubridate)
library(gapminder)
gapminder
str(gapminder)
n_distinct(gapminder$country)
gapminder %>%
group_by(continent) %>%
distinct(country) %>%
arrange(continent)
gapminder %>%
group_by(continent) %>%
summarise(years = n_distinct(year), countries = n_distinct(country), n = n())
ggplot(gapminder)+
geom_histogram(mapping = aes(x = lifeExp), binwidth = 5)+
facet_wrap(~continent)
gapminder %>%
group_by(continent) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
ggplot(data = gapminder)+
geom_boxplot(mapping = aes(x = continent, y = lifeExp))
ggplot(gapminder) +
geom_boxplot(mapping = aes(fct_reorder(continent,lifeExp,median), y = lifeExp))+
xlab("continent")
americas <- gapminder %>%
filter(continent == "Americas")
ggplot(americas) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
europe <- gapminder %>%
filter(continent == "Europe")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
coord_flip()
nordic = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
gapminder %>%
filter(country %in% nordic)
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
# mod <- lm(lifeExp ~ gdpPercap, data = gapminder_6)
# summary(mod)
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
# Put your answers to code-based questions into the given empty code-blocks.
# Run (test) your individual code chunks (Ctrl + Shift + Enter).
# Run All code blocks (Ctrl + Alt + R) before you "Preview" (Ctrl + Shift + K) the notebook in a browser.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(openintro)
sel <- c("sex", "age", "wgt", "hgt", "wai.gi")
body <- as_tibble(bdims)[sel]
body
#Um hesin kotustumpur verður koyrdur meira enn eina ferð, verður roynt at parsa til faktor, nakað
#ið longu ER parsað til faktor, og resulterar tað natúrligvís í einum feili. RUN-ALL er loysnin tá
body$sex = parse_factor(body$sex, levels = c(0, 1))
body$sex = fct_recode(body$sex, "f" = "0", "m" = "1")
body
ggplot(body)+
geom_point(mapping = aes(x = wai.gi, y = wgt))
ggplot(data = body)+
geom_point(mapping = aes(x = wai.gi, y = wgt, color = sex))
ggplot(data = body)+
geom_point(mapping = aes(x = wai.gi, y = wgt, color = sex))+
facet_wrap(~ sex, nrow = 1)
ggplot(data = body)+
geom_histogram(mapping = aes(x = hgt), binwidth = 5)+
facet_wrap(~ sex, nrow = 2)
ggplot(data = body, mapping = aes(x = hgt))+
geom_histogram(binwidth = 5)+
geom_freqpoly(mapping = aes(colour = sex), binwidth = 5)
body %>%
summarise(n(), mean(age), sd(age), min(age), quantile(age, 0.25), median(age),
quantile(age, 0.75), max(age), IQR(age))
body %>%
group_by(sex) %>%
summarise(n(), mean(age), sd(age), min(age), quantile(age, 0.25), median(age),
quantile(age, 0.75), max(age), IQR(age))
grouped_by_sex <- body %>%
group_by(sex)
ggplot(data = grouped_by_sex)+
geom_boxplot(mapping = aes(y = age))
body %>%
group_by(sex) %>%
summarise(n(), mean(hgt), sd(hgt), min(hgt), quantile(hgt, 0.25), median(hgt),
quantile(hgt, 0.75), max(hgt), IQR(hgt))
grouped_by_sex <- body %>%
group_by(sex)
ggplot(data = grouped_by_sex)+
geom_boxplot(mapping = aes(y = hgt))
ggplot(data = body %>% group_by(sex))+
geom_boxplot(mapping = aes(y =hgt))
ggplot(body)+
stat_qq(mapping = aes(sample = age, color = sex))
ggplot(body)+
stat_qq(mapping = aes(sample = hgt, color = sex))+
stat_qq_line(mapping = aes(sample = hgt, color = sex))
males <- body %>%
filter(sex == "m")
ggplot(males)+
geom_histogram(mapping = aes(x = hgt, y = ..density..), binwidth = 5)
ggplot(males)+
geom_histogram(mapping = aes(x = hgt, y = ..density..), binwidth = 5)+
stat_function(fun = dnorm, args = list(mean = mean(males$hgt), sd = sd(males$hgt)))
mean <- mean(males$hgt)
sd <- sd(males$hgt)
n <- nrow(males)
#Upper confiedence limit
UCL <- mean + 1.96*(sd/sqrt(n))
#Lower confidence limit
LCL <- mean - 1.96*(sd/sqrt(n))
UCL
LCL
females <- body %>%
filter(sex == "f")
mean <- mean(females$hgt)
sd <- sd(females$hgt)
n <- nrow(females)
#Upper confiedence limit
UCL <- mean + 1.96*(sd/sqrt(n))
#Lower confidence limit
LCL <- mean - 1.96*(sd/sqrt(n))
UCL
LCL
mean <- mean(body$hgt)
sd <- sd(body$hgt)
n <- nrow(body)
#Upper confiedence limit
UCL <- mean + 1.96*(sd/sqrt(n))
#Lower confidence limit
LCL <- mean - 1.96*(sd/sqrt(n))
UCL
LCL
ggplot(data = body)+
geom_histogram(mapping = aes(x = hgt, y = ..density..), binwidth = 5)+
stat_function(fun = dnorm, args = list(mean = mean(body$hgt), sd = sd(body$hgt)))
ggplot(data = body)+
stat_qq(mapping = aes(sample = hgt))
h <- sample(body$hgt, size = 50, replace = FALSE)
h
mean <- mean(h)
s <- sd(h)
se <- s / sqrt(length(h))
mean
s
se
ci95_high <- mean + 1.96*se
#Lower confidence limit
ci95_low <- mean - 1.96*se
ci95_low
ci95_high
pop_mean <- 171.14
test <- function(ilow, ihigh){
if(pop_mean >= ilow && pop_mean <= ihigh)
return(TRUE)
else
return(FALSE)
}
test(ci95_low,ci95_high)
n <- 50
r <- 100
mu_inside <-
replicate(r, {
# h
h <- sample(body$hgt, size = 50, replace = FALSE)
# mean
mean <- mean(h)
# s
s <-sd (h)
# se
se <- s / sqrt(n)
# ci95_high
ci95_high <- mean+1.96*se
# ci95_low
ci95_low <- mean-1.96*se
# (condition)
test(ci95_low,ci95_high)
})
mu_inside
false <- length(mu_inside[mu_inside==FALSE])
true <- length(mu_inside[mu_inside==TRUE])
#false percent
(false / true)*100
body %>% summarise_if(is.numeric, funs(mean, sd))
body %>% summarise_at(vars(age, hgt), funs(mean, sd))
body %>% group_by(sex) %>% summarise_at(vars(age, hgt), funs(mean, sd)) %>% select(sex, age_mean, age_sd, hgt_sd)
t.test(body$hgt)
t.test(body$age)
males <- body %>%
filter(sex == "m")
females <- body %>%
filter(sex == "f")
t.test(males$hgt, females$hgt)
