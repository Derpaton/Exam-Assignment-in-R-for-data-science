europe <- gapminder %>%
filter(continent == "Europe")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country") +
coord_flip()
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list) %>%
group_by(country) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
nordic
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic, mapping = aes(sample = lifeExp)) +
stat_qq() +
stat_qq_line()+
facet_wrap(~country)
denmark <- gapminder %>%
filter(country %in% "Denmark")
ireland <- gapminder %>%
filter(country %in% "Ireland")
t.test(denmark$lifeExp,ireland$lifeExp)
power.t.test(n = 12,delta = 3.15, sd = 3, sig.level = 0.05)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.9)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.9)
countryfilter = c("Iceland", "Sweden" , "Austria", "Norway", "Denmark", "France")
gapminder_6 <- gapminder %>%
filter(country %in% countryfilter)
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
mod <- lm(lifeExp ~ gdpPercap, data = gapminder_6)
summary(mod)
broom::glance(mod)
mod_au <- broom::augment(mod, gapminder_6)
mod_au
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))+
geom_point()
ggplot(data = mod) +
geom_boxplot(mapping = aes(y = .resid, x = "mod_au"))
ggplot(mod_au, mapping = aes(sample = .resid)) +
stat_qq() +
stat_qq_line()
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
quality_6 <- gapminder_6 %>%
group_by(country)%>%
do(broom::glance(lm(lifeExp ~ gdpPercap, data=.)))
knitr::kable(quality_6, format = "pandoc", caption = "Quality of the linear modelling grouped by country", digits = 3)
results <- read_csv(file = "results.csv", col_types = cols(date = col_date(format = "%Y-%m-%d")))
results
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification") %>%
filter(date >= as.Date("1989-12-31"))
UEFI
teamfilter <- c("Faroe Islands", "Iceland", "Denmark", "Germany")
UEFI_home <- UEFI %>%
filter(home_team == teamfilter)%>%
mutate(score = home_score - away_score, team = home_team, type = "home")
UEFI_home
UEFI_away <- UEFI %>%
filter(away_team == teamfilter) %>%
mutate(score = away_score - home_score,team = away_team, type = "away")
UEFI_away
UEFI_games <- rbind(UEFI_away, UEFI_home)
ggplot(UEFI_games, mapping = aes(x = date, y = score))+
geom_point() +
stat_smooth(method = lm)+
facet_wrap(~team)
home_away <- UEFI_games %>%
group_by(team, type) %>%
summarise(loose=(score < 0))
UEFI_away <- UEFI %>%
filter(away_team %in% teamfilter) %>%
mutate(score = away_score - home_score,team = away_team, type = "away")
UEFI_away <- UEFI %>%
filter(away_team %in% teamfilter) %>%
mutate(score = away_score - home_score,team = away_team, type = "away")
UEFI_away
# Put your answers to code-based questions into the given empty code-blocks.
# Run (test) your individual code chunks (Ctrl + Shift + Enter).
# Run All code blocks (Ctrl + Alt + R) before you "Preview" (Ctrl + Shift + K) the notebook in a browser.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(broom)
library(lubridate)
library(gapminder)
gapminder
str(gapminder)
n_distinct(gapminder$country)
gapminder %>%
group_by(continent) %>%
distinct(country) %>%
arrange(continent)
gapminder %>%
group_by(continent) %>%
summarise(years = n_distinct(year), countries = n_distinct(country), n = n())
ggplot(gapminder)+
geom_histogram(mapping = aes(x = lifeExp), binwidth = 5)+
facet_wrap(~continent)
gapminder %>%
group_by(continent) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
ggplot(data = gapminder)+
geom_boxplot(mapping = aes(x = continent, y = lifeExp))
ggplot(gapminder) +
geom_boxplot(mapping = aes(fct_reorder(continent,lifeExp,median), y = lifeExp))+
xlab("continent")
americas <- gapminder %>%
filter(continent == "Americas")
ggplot(americas) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
europe <- gapminder %>%
filter(continent == "Europe")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country") +
coord_flip()
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list) %>%
group_by(country) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
nordic
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic, mapping = aes(sample = lifeExp)) +
stat_qq() +
stat_qq_line()+
facet_wrap(~country)
denmark <- gapminder %>%
filter(country %in% "Denmark")
ireland <- gapminder %>%
filter(country %in% "Ireland")
t.test(denmark$lifeExp,ireland$lifeExp)
power.t.test(n = 12,delta = 3.15, sd = 3, sig.level = 0.05)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.9)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.9)
countryfilter = c("Iceland", "Sweden" , "Austria", "Norway", "Denmark", "France")
gapminder_6 <- gapminder %>%
filter(country %in% countryfilter)
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
mod <- lm(lifeExp ~ gdpPercap, data = gapminder_6)
summary(mod)
broom::glance(mod)
mod_au <- broom::augment(mod, gapminder_6)
mod_au
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))+
geom_point()
ggplot(data = mod) +
geom_boxplot(mapping = aes(y = .resid, x = "mod_au"))
ggplot(mod_au, mapping = aes(sample = .resid)) +
stat_qq() +
stat_qq_line()
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
quality_6 <- gapminder_6 %>%
group_by(country)%>%
do(broom::glance(lm(lifeExp ~ gdpPercap, data=.)))
knitr::kable(quality_6, format = "pandoc", caption = "Quality of the linear modelling grouped by country", digits = 3)
results <- read_csv(file = "results.csv", col_types = cols(date = col_date(format = "%Y-%m-%d")))
results
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification") %>%
filter(date >= as.Date("1989-12-31"))
UEFI
teamfilter <- c("Faroe Islands", "Iceland", "Denmark", "Germany")
UEFI_home <- UEFI %>%
filter(home_team %in% teamfilter)%>%
mutate(score = home_score - away_score, team = home_team, type = "home")
UEFI_home
UEFI_away <- UEFI %>%
filter(away_team %in% teamfilter) %>%
mutate(score = away_score - home_score,team = away_team, type = "away")
UEFI_away
UEFI_games <- rbind(UEFI_away, UEFI_home)
ggplot(UEFI_games, mapping = aes(x = date, y = score))+
geom_point() +
stat_smooth(method = lm)+
facet_wrap(~team)
home_away <- UEFI_games %>%
group_by(team, type) %>%
summarise(loose=(score < 0))
quality_6 <- gapminder_6 %>%
group_by(country)%>%
do(broom::glance(lm(lifeExp ~ gdpPercap, data=.)))
knitr::kable(quality_6, format = "pandoc", caption = "Quality of the linear modelling grouped by country", digits = 3)
country_au <- gapminder %>%
group_by(country)%>%
do(augment(lm(lifeExp ~ gdpPercap, data=.)))
country_au
ggplot(country_au, mapping = aes(x = gdpPercap, y = .resid)) +
geom_point()+
facet_wrap()
ggplot(country_au, mapping = aes(x = gdpPercap, y = .resid)) +
geom_point()+
facet_wrap(~country)
ggplot(country_au, mapping = aes(x = gdpPercap, y = .resid)) +
geom_point()+
facet_wrap(~country)
knitr::opts_chunk$set(echo = TRUE)
ggplot(country_au, mapping = aes(x = gdpPercap, y = .resid)) +
geom_point()+
facet_wrap(~country)
# Put your answers to code-based questions into the given empty code-blocks.
# Run (test) your individual code chunks (Ctrl + Shift + Enter).
# Run All code blocks (Ctrl + Alt + R) before you "Preview" (Ctrl + Shift + K) the notebook in a browser.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(broom)
library(lubridate)
library(gapminder)
gapminder
str(gapminder)
n_distinct(gapminder$country)
gapminder %>%
group_by(continent) %>%
distinct(country) %>%
arrange(continent)
gapminder %>%
group_by(continent) %>%
summarise(years = n_distinct(year), countries = n_distinct(country), n = n())
ggplot(gapminder)+
geom_histogram(mapping = aes(x = lifeExp), binwidth = 5)+
facet_wrap(~continent)
gapminder %>%
group_by(continent) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
ggplot(data = gapminder)+
geom_boxplot(mapping = aes(x = continent, y = lifeExp))
ggplot(gapminder) +
geom_boxplot(mapping = aes(fct_reorder(continent,lifeExp,median), y = lifeExp))+
xlab("continent")
americas <- gapminder %>%
filter(continent == "Americas")
ggplot(americas) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
europe <- gapminder %>%
filter(continent == "Europe")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country") +
coord_flip()
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list) %>%
group_by(country) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
nordic
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic, mapping = aes(sample = lifeExp)) +
stat_qq() +
stat_qq_line()+
facet_wrap(~country)
denmark <- gapminder %>%
filter(country %in% "Denmark")
ireland <- gapminder %>%
filter(country %in% "Ireland")
t.test(denmark$lifeExp,ireland$lifeExp)
power.t.test(n = 12,delta = 3.15, sd = 3, sig.level = 0.05)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.9)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.9)
countryfilter = c("Iceland", "Sweden" , "Austria", "Norway", "Denmark", "France")
gapminder_6 <- gapminder %>%
filter(country %in% countryfilter)
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
mod <- lm(lifeExp ~ gdpPercap, data = gapminder_6)
summary(mod)
broom::glance(mod)
mod_au <- broom::augment(mod, gapminder_6)
mod_au
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))+
geom_point()
ggplot(data = mod) +
geom_boxplot(mapping = aes(y = .resid, x = "mod_au"))
ggplot(mod_au, mapping = aes(sample = .resid)) +
stat_qq() +
stat_qq_line()
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
quality_6 <- gapminder_6 %>%
group_by(country)%>%
do(broom::glance(lm(lifeExp ~ gdpPercap, data=.)))
knitr::kable(quality_6, format = "pandoc", caption = "Quality of the linear modelling grouped by country", digits = 3)
country_au <- gapminder %>%
group_by(country)%>%
do(augment(lm(lifeExp ~ gdpPercap, data=.)))
country_au
ggplot(country_au, mapping = aes(x = gdpPercap, y = .resid)) +
geom_point()+
facet_wrap(~country)
results <- read_csv(file = "results.csv", col_types = cols(date = col_date(format = "%Y-%m-%d")))
results
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification") %>%
filter(date >= as.Date("1989-12-31"))
UEFI
teamfilter <- c("Faroe Islands", "Iceland", "Denmark", "Germany")
UEFI_home <- UEFI %>%
filter(home_team %in% teamfilter)%>%
mutate(score = home_score - away_score, team = home_team, type = "home")
UEFI_home
UEFI_away <- UEFI %>%
filter(away_team %in% teamfilter) %>%
mutate(score = away_score - home_score,team = away_team, type = "away")
UEFI_away
UEFI_games <- rbind(UEFI_away, UEFI_home)
ggplot(UEFI_games, mapping = aes(x = date, y = score))+
geom_point() +
stat_smooth(method = lm)+
facet_wrap(~team)
home_away <- UEFI_games %>%
group_by(team, type) %>%
summarise(loose=(score < 0))
ggplot(country_au, mapping = aes(x = gdpPercap, y = .resid)) +
geom_point()+
facet_wrap(~country_au$country)
# Put your answers to code-based questions into the given empty code-blocks.
# Run (test) your individual code chunks (Ctrl + Shift + Enter).
# Run All code blocks (Ctrl + Alt + R) before you "Preview" (Ctrl + Shift + K) the notebook in a browser.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(broom)
library(lubridate)
library(gapminder)
gapminder
str(gapminder)
n_distinct(gapminder$country)
gapminder %>%
group_by(continent) %>%
distinct(country) %>%
arrange(continent)
gapminder %>%
group_by(continent) %>%
summarise(years = n_distinct(year), countries = n_distinct(country), n = n())
ggplot(gapminder)+
geom_histogram(mapping = aes(x = lifeExp), binwidth = 5)+
facet_wrap(~continent)
gapminder %>%
group_by(continent) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
ggplot(data = gapminder)+
geom_boxplot(mapping = aes(x = continent, y = lifeExp))
ggplot(gapminder) +
geom_boxplot(mapping = aes(fct_reorder(continent,lifeExp,median), y = lifeExp))+
xlab("continent")
americas <- gapminder %>%
filter(continent == "Americas")
ggplot(americas) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
europe <- gapminder %>%
filter(continent == "Europe")
ggplot(europe) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country") +
coord_flip()
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic) +
geom_boxplot(mapping = aes(fct_reorder(country, lifeExp, median), y = lifeExp))+
xlab("country")
nordic_list = c("Denmark", "Finland", "Iceland", "Norway", "Sweden", "Ireland")
nordic <- gapminder %>%
filter(country %in% nordic_list) %>%
group_by(country) %>%
summarise(n = n(), min = min(lifeExp), q1 = quantile(lifeExp, 0.25), median = median(lifeExp), q3 = quantile(lifeExp, 0.75), max = max(lifeExp), IQR = IQR(lifeExp), mean = mean(lifeExp), sd = sd(lifeExp))
nordic
nordic <- gapminder %>%
filter(country %in% nordic_list)
ggplot(nordic, mapping = aes(sample = lifeExp)) +
stat_qq() +
stat_qq_line()+
facet_wrap(~country)
denmark <- gapminder %>%
filter(country %in% "Denmark")
ireland <- gapminder %>%
filter(country %in% "Ireland")
t.test(denmark$lifeExp,ireland$lifeExp)
power.t.test(n = 12,delta = 3.15, sd = 3, sig.level = 0.05)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 3.15, sd = 3, sig.level = 0.05, power = 0.9)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.7)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.8)
power.t.test(delta = 1, sd = 3, sig.level = 0.05, power = 0.9)
countryfilter = c("Iceland", "Sweden" , "Austria", "Norway", "Denmark", "France")
gapminder_6 <- gapminder %>%
filter(country %in% countryfilter)
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
mod <- lm(lifeExp ~ gdpPercap, data = gapminder_6)
summary(mod)
broom::glance(mod)
mod_au <- broom::augment(mod, gapminder_6)
mod_au
ggplot(data = mod_au,mapping = aes( x=gdpPercap, y = .resid))+
geom_point()
ggplot(data = mod) +
geom_boxplot(mapping = aes(y = .resid, x = "mod_au"))
ggplot(mod_au, mapping = aes(sample = .resid)) +
stat_qq() +
stat_qq_line()
ggplot(gapminder_6, mapping = aes(x = gdpPercap, y = lifeExp))+
geom_point()+
stat_smooth(method = lm)
quality_6 <- gapminder_6 %>%
group_by(country)%>%
do(broom::glance(lm(lifeExp ~ gdpPercap, data=.)))
knitr::kable(quality_6, format = "pandoc", caption = "Quality of the linear modelling grouped by country", digits = 3)
country_au <- gapminder_6 %>%
group_by(country)%>%
do(augment(lm(lifeExp ~ gdpPercap, data=.)))
country_au
ggplot(country_au, mapping = aes(x = gdpPercap, y = .resid)) +
geom_point()+
facet_wrap(~country_au$country)
results <- read_csv(file = "results.csv", col_types = cols(date = col_date(format = "%Y-%m-%d")))
results
UEFI <- results %>%
filter(tournament == "UEFA Euro qualification" | tournament == "FIFA World Cup qualification") %>%
filter(date >= as.Date("1989-12-31"))
UEFI
teamfilter <- c("Faroe Islands", "Iceland", "Denmark", "Germany")
UEFI_home <- UEFI %>%
filter(home_team %in% teamfilter)%>%
mutate(score = home_score - away_score, team = home_team, type = "home")
UEFI_home
UEFI_away <- UEFI %>%
filter(away_team %in% teamfilter) %>%
mutate(score = away_score - home_score,team = away_team, type = "away")
UEFI_away
UEFI_games <- rbind(UEFI_away, UEFI_home)
ggplot(UEFI_games, mapping = aes(x = date, y = score))+
geom_point() +
stat_smooth(method = lm)+
facet_wrap(~team)
home_away <- UEFI_games %>%
group_by(team, type) %>%
summarise(loose=(score < 0))
ggplot(country_au, mapping = aes(x = gdpPercap, y = .resid)) +
geom_point()+
facet_wrap(~country_au$country)+
geom_smooth()
ggplot(country_au, mapping = aes(x = gdpPercap, y = .resid)) +
geom_point()+
facet_wrap(~country_au$country)
ggplot(country_au) +
geom_boxplot(mapping = aes(y = .resid))
ggplot(country_au) +
geom_boxplot(mapping = aes(y = .resid,x = country))+
facet_wrap()
ggplot(country_au) +
geom_boxplot(mapping = aes(y = .resid))+
facet_wrap(~country)
ggplot(country_au) +
geom_boxplot(mapping = aes(y = .resid))
ggplot(country_au) +
geom_boxplot(mapping = aes(y = .resid, x = country))
ggplot(country_au)+
stat_qq()+
stat_qq_line()
ggplot(country_au, mapping = aes(sample = .resid))+
stat_qq()+
stat_qq_line()+
facet_wrap(~country)
